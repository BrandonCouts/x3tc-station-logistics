#name: anarkis.acc.task.repairs
#lang: 44
#origin_mod: ADS
#source: mods/ADS/scripts/anarkis.acc.task.repairs.xml


$owner = [OWNER]
$timer.training = 0
while [OWNER] == $owner

= [THIS] -> call script anarkis.lib.wait :  wait time (in sec)=60  global to check=null
inc $timer.training =
if $timer.training >= 60
$timer.training = 0
$cost = [THIS] -> call script anarkis.ads.crew.getcost :  ref object=[THIS]
$pl.money = get player money
if $pl.money >= $cost
$cost = 0 - $cost
add money to player: $cost
= [THIS] -> call script anarkis.ads.crew.train :  ref object=[THIS]
else
= [THIS] -> call script anarkis.ads.crew.sleep :  ref object=[THIS]
end
end

$setup.array = [THIS] -> get local variable: name='anarkis.acc.setup'
$repair.setup = $setup.array[17]

$mecha.count = $repair.setup[0]
skip if $mecha.count > 0
continue

$allow.docked = $repair.setup[1]
$allow.carrier = $repair.setup[2]

$repair.ratio = [THIS] -> call script anarkis.ads.crew.getrepair :  ref object=[THIS]
$repair.ratio = $mecha.count * 25 + $repair.ratio
$onduty = [FALSE]

if $allow.carrier == [TRUE]
$c.hull = [THIS] -> get hull
$m.hull = [THIS] -> get max hull
$need = $m.hull - $c.hull
if $need
$onduty = [TRUE]
$c.hull = $c.hull + $repair.ratio
[THIS] -> set hull to $c.hull
$repair.ratio = 0
end
end

if $allow.docked == [TRUE]
$ship.list = [THIS] -> get ship array from sector/ship/station
$cnt =  size of array $ship.list
while $cnt AND $repair.ratio
dec $cnt =
$select = $ship.list[$cnt]
$c.hull = $select -> get hull
$m.hull = $select -> get max hull
$need = $m.hull - $c.hull
if $need > 0
$onduty = [TRUE]
if $need >= $repair.ratio
$c.hull = $c.hull + $repair.ratio
$repair.ratio = 0
else
$repair.ratio = $repair.ratio - $need
$c.hull = $c.hull + $need
end
*$msg = sprintf: fmt='Repair : %s (%s)', $select, $need, null, null, null
*display subtitle text: text=$msg duration=2000 ms
if $c.hull > $m.hull
$select -> set hull to $m.hull
else
$select -> set hull to $c.hull
end
end
end
end

if [OWNER] == Player
if $onduty == [TRUE]
$cost = $mecha.count * 5000 / 60
else
$cost = $mecha.count * 1000 / 60
end
$money = get player money
if $cost > $money
$repair.setup[0] = 0
else
$cost = 0 - $cost
add money to player: $cost
end
end

end


return null
