#name: plugin.LI.FDN.Menu.AP.Factory.List
#lang: 44
#origin_mod: FDN
#source: mods/FDN/scripts/plugin.LI.FDN.Menu.AP.Factory.List.xml
$al.Settings = get global variable: name='al.LI.FDN.event'
if $al.Settings
$PageID = $al.Settings[1]
$dc = $al.Settings[2]
end

$name = null
$factory.count = 0
$dock.count = 0
$sector.count = 0
$product.count = 0
$resource.count = 0
* -----------------------------------------------------------------------------------

$sector.array = null -> call script plugin.LI.FDN.Sector.Array : search=4
$s = size of array $sector.array
* -----------------------------------------------------------------------------------

if not $show.array
$show.array = = array alloc: size=$s
end
* -----------------------------------------------------------------------------------

$txt = = read text: page=$PageID id=200
add custom menu heading to array $menu: title=$txt
* -----------------------------------------------------------------------------------

* group open
$show.all = = create menu return value: command Open All Groups
$txt = = read text: page=$PageID id=198
add custom menu item to array $menu: text=$txt returnvalue=$show.all
$hide.all = = create menu return value: command Close All Groups
$txt = = read text: page=$PageID id=199
add custom menu item to array $menu: text=$txt returnvalue=$hide.all
add section to custom menu: $menu
* -----------------------------------------------------------------------------------

* loop sectors
while $s > 0
dec $s =
$sector = $sector.array[$s]
inc $sector.count =
$return.array = = array alloc: size=2
$return.array[0] = 'show.factory'
$return.array[1] = $s

if not $show.array[$s]
$show.array[$s] = 1
end
$check = $show.array[$s]

add new grouping to menu: $menu, text=$sector, open=$check

* find factories in sector
$flags = [Find.Multiple]
$factory.array = find station: sector=$sector class or type=Factory 2006 race=Player flags=$flags refobj=null maxdist=null maxnum=999 refpos=null
$factory.array = = sort array $factory.array
$factory.array = reverse array $factory.array
* -----------------------------------------------------------------------------------

* loop factories
$sf = size of array $factory.array
while $sf > 0
dec $sf =
$factory = $factory.array[$sf]
if $factory  ->  is of class Factory 2006
* FOR NOW EXCLUDE COMPLEX HUBS
if not $factory  ->  is of class Complex Hub
$detectable = $factory  ->  is detectable
if $detectable == 0
inc $factory.count =

gosub Factory.Summary.Sub:
end
end
end
end
* -----------------------------------------------------------------------------------
add section to custom menu: $menu

* find docks in sector
$flags = [Find.Multiple]
$dock.array = find station: sector=$sector class or type=Dock 2007 race=Player flags=$flags refobj=null maxdist=null maxnum=999 refpos=null
$dock.array = = sort array $dock.array
$dock.array = reverse array $dock.array
* -----------------------------------------------------------------------------------

* loop docks
$sd = size of array $dock.array
while $sd > 0
dec $sd =
$dock = $dock.array[$sd]
if not $dock == $dc
inc $dock.count =

gosub Dock.Summary.Sub:
end
end
* -----------------------------------------------------------------------------------
add end grouping to menu: $menu

end
* -----------------------------------------------------------------------------------

$txt = = read text: page=$PageID id=157
add custom menu heading to array $menu: title=$txt
$txt = = read text: page=$PageID id=158
add custom menu item to array $menu: text=$txt returnvalue='product.all.on'
$txt = = read text: page=$PageID id=159
add custom menu item to array $menu: text=$txt returnvalue='resource.all.on'
* -----------------------------------------------------------------------------------

add section to custom menu: $menu
$txt = = read text: page=$PageID id=166
add custom menu item to array $menu: text=$txt returnvalue='product.all.off'
$txt = = read text: page=$PageID id=167
add custom menu item to array $menu: text=$txt returnvalue='resource.all.off'
* -----------------------------------------------------------------------------------

if $al.Settings[9]
$txt = = read text: page=$PageID id=180
else
$txt = = read text: page=$PageID id=181
end
add custom menu info line to array $menu: text=$txt
add custom menu info line to array $menu: text=' '
* -----------------------------------------------------------------------------------

if $sector.count > 0
$txt = = sprintf: pageid=$PageID textid=2000, $sector.count, null, null, null, null
add custom menu info line to array $menu: text=$txt
if $factory.count > 0
$txt = = sprintf: pageid=$PageID textid=2002, $factory.count, $product.count, $resource.count, null, null
add custom menu info line to array $menu: text=$txt
end
if $dock.count > 0
$txt = = sprintf: pageid=$PageID textid=2001, $dock.count, null, null, null, null
add custom menu info line to array $menu: text=$txt
end
end
* -----------------------------------------------------------------------------------
return $menu
* -----------------------------------------------------------------------------------


* -----------------------------------------------------------------------------------
* dock summary
Dock.Summary.Sub:

$name = null -> call script plugin.LI.FDN.Format.Name : object=$dock
$name = '- ' + $name
$name = = sprintf: pageid=$PageID textid=9000, $name, null, null, null, null
* -----------------------------------------------------------------------------------

* format display line
$temp.array = = array alloc: size=6
$temp.array[0] = 1
$temp.array[1] = ''
$temp.array[2] = 5
$temp.array[3] = $name
$temp.array[4] = -1
$temp.array[5] = ' '
* -----------------------------------------------------------------------------------

* open factory
$return.array = = array alloc: size=2
$return.array[0] = 'open.dock'
$return.array[1] = $dock
* -----------------------------------------------------------------------------------

$format = = create new array, arguments=$temp.array, $return.array, null, null, null
append $format to array $menu
endsub
* -----------------------------------------------------------------------------------


* -----------------------------------------------------------------------------------
* factory summary
Factory.Summary.Sub:

$name = null -> call script plugin.LI.FDN.Format.Name : object=$factory
$pre = = sprintf: pageid=$PageID textid=9000, '- ', null, null, null, null
$name = $pre + $name
* -----------------------------------------------------------------------------------

* get factory settings
$pointer = = read text: page=$PageID id=4001
if not $factory  ->  get local variable: name=$pointer
$settings.array = = array alloc: size=6
$factory  ->  set local variable: name=$pointer value=$settings.array
end
$settings.array = $factory  ->  get local variable: name=$pointer
* -----------------------------------------------------------------------------------

* auto manage check
if not $settings.array[2]
$settings.array[2] = 1
* check auto manage setting if set turn on at factory
if $al.Settings[9]
$settings.array[0] = 1
$settings.array[1] = 1
end
$factory  ->  set local variable: name=$pointer value=$settings.array
end
* -----------------------------------------------------------------------------------

$temp.array = = array alloc: size=8

* manage product setting
if $settings.array[0]
inc $product.count =
$txt = = read text: page=$PageID id=162
else
$txt = = read text: page=$PageID id=160
end
$temp.array[5] = $txt
* -----------------------------------------------------------------------------------

* manage resource setting
if $settings.array[1]
inc $resource.count =
$txt = = read text: page=$PageID id=163
else
$txt = = read text: page=$PageID id=161
end
$temp.array[7] = $txt
* -----------------------------------------------------------------------------------

* format display line
$temp.array[0] = 1
$temp.array[1] = ''
$temp.array[2] = 5
$temp.array[3] = $name
$temp.array[4] = -200
$temp.array[6] = -1
* -----------------------------------------------------------------------------------

* open factory
$return.array = = array alloc: size=2
$return.array[0] = 'open.factory'
$return.array[1] = $factory
* -----------------------------------------------------------------------------------

$format = = create new array, arguments=$temp.array, $return.array, null, null, null
append $format to array $menu
endsub
* -----------------------------------------------------------------------------------
return null


