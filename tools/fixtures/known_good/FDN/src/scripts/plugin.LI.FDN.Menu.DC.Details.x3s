#name: plugin.LI.FDN.Menu.DC.Details
#lang: 44
#origin_mod: FDN
#source: mods/FDN/scripts/plugin.LI.FDN.Menu.DC.Details.xml

* Author: Logain Abler
* -----------------------------------------------------------------------------------
* This script builds the DC Details Menu and retuns the array back to the Main Menu
* Called by plugin.LI.FDN.Main.Menu

* Expected values:
* - menu - This is the menu array from the Main Menu
* - ware.show.array - This array hold the values of what Ware Type is displayed or hiden
* Ware.show.array can be null

* Return values:
* - return.array[update menu array][ware.show.array]

* ToDo:
* - ?

* Version: 1.0
* Date: 22/05/2012
* Tested: 22/05/2012
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* Start
* -----------------------------------------------------------------------------------
* Fetch values saved in the AL Plugin global variable:
* - Page ID
* - Designated DC
$al.Settings = get global variable: name='al.LI.FDN.event'
if $al.Settings
$PageID = $al.Settings[1]
$dc = $al.Settings[2]
end
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* If DC ware menu else display no DC message
* -----------------------------------------------------------------------------------
if $dc
* -----------------------------------------------------------------------------------
* Define Reference:
* The ID code of the DC is used as a reference in naming the global variable
$id = $dc  ->  get ID code
* -----------------------------------------------------------------------------------
$txt = = read text: page=$PageID id=115
add custom menu heading to array $menu: title=$txt
* -----------------------------------------------------------------------------------
$txt = = read text: page=$PageID id=129
add custom menu info line to array $menu: text=$txt
* -----------------------------------------------------------------------------------
* Calls script to format name
$txt = [THIS] -> call script plugin.LI.FDN.Format.Name : object=$dc
* -----------------------------------------------------------------------------------
$temp.array = = array alloc: size=4
$temp.array[0] = 1
$temp.array[1] = $txt
$temp.array[2] = -1
$txt = $dc  ->  get sector
$temp.array[3] = $txt
add custom menu info line to array $menu: text=$temp.array
* -----------------------------------------------------------------------------------
* This call the plugin.LI.FDN.Sort.Wares which returns a wares arrays sorted by type
* $sorted.ware.array[x] is the Main Type
* $sorted.ware.array[x][x] is the sorted Ware Array for the Main Type
$sorted.ware.array = [THIS] -> call script plugin.LI.FDN.Sort.Wares : station=$dc
* -----------------------------------------------------------------------------------
$sm = size of array $sorted.ware.array
* -----------------------------------------------------------------------------------
* Create and size show type array
$pointer = = read text: page=$PageID id=4004
$show.type.array = $dc  ->  get local variable: name=$pointer
if not $show.type.array
$show.type.array = = array alloc: size=$sm
$dc  ->  set local variable: name=$pointer value=$show.type.array
end
* -----------------------------------------------------------------------------------

$pointer = = sprintf: pageid=$PageID textid=5001, $id, null, null, null, null
$array = get global variable: name=$pointer
add custom menu heading to array $menu: title=$array
* -----------------------------------------------------------------------------------
* Start of While Loop with 1 nested While Loop - First loop is Main Type
* -----------------------------------------------------------------------------------
while $sm > 0
dec $sm =
* -----------------------------------------------------------------------------------
* Fetch main.type and ware.array from sorted.ware.array
$main.type = $sorted.ware.array[$sm][0]
$ware.array = $sorted.ware.array[$sm][1]
* -----------------------------------------------------------------------------------
$sw = size of array $ware.array
if $sw > 0
* -----------------------------------------------------------------------------------
* if ware.show.array for the main type is null set to 1 (1 = show 2 = hide)
if not $show.type.array[$sm]
$show.type.array[$sm] = 1
end
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* If show wares Start of While Loop - Second Loop is Wares
$check = $show.type.array[$sm]
gosub Get.Ware.Header.Sub:
if $check == 1
* -----------------------------------------------------------------------------------
while $sw > 0
dec $sw =
$ware = $ware.array[$sw]
* -----------------------------------------------------------------------------------
* Calls the global variable for the dynamic menu created by plugin.LI.FDN.Menu.DC.Details_D
* DC ID code and Ware are used to call the unique global variable
$pointer = = sprintf: pageid=$PageID textid=5000, $id, $ware, null, null, null
$summary = get global variable: name=$pointer
append $summary to array $menu
* -----------------------------------------------------------------------------------
end
end
end
add section to custom menu: $menu
end
else
* -----------------------------------------------------------------------------------
* Show message - No DC
$txt = = read text: page=$PageID id=115
add custom menu heading to array $menu: title=$txt
$txt = = read text: page=$PageID id=118
append $txt to array $menu
end

$txt = = read text: page=$PageID id=195
add custom menu heading to array $menu: title=$txt
$txt = = read text: page=$PageID id=196
$return.array = = array alloc: size=2
$return.array[0] = 'add.ware'
$return.array[1] = $dc

$txt = = read text: page=$PageID id=196
add custom menu item to array $menu: text=$txt returnvalue=$return.array

$txt = = read text: page=$PageID id=164
add custom menu heading to array $menu: title=$txt
$txt = = read text: page=$PageID id=165
add custom menu item to array $menu: text=$txt returnvalue='open.config'
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* Return values to plugin.LI.FDN.Main.Menu
return $menu
* Script Exit Point
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* SUB Section
* -----------------------------------------------------------------------------------
* This Sub is used to create the wares header by main type
Get.Ware.Header.Sub:
if $check == 1
$temp.array = = array alloc: size=12
$temp.array[0] = 1
$txt = = read text: page=$PageID id=$main.type
$txt = = sprintf: pageid=$PageID textid=18, $txt, $sw, null, null, null
$temp.array[1] = $txt
$temp.array[2] = -470
$txt = = read text: page=$PageID id=142
$temp.array[3] = $txt
$temp.array[4] = -380
$txt = = read text: page=$PageID id=144
$temp.array[5] = $txt
$temp.array[6] = -290
$txt = = read text: page=$PageID id=143
$temp.array[7] = $txt
$temp.array[8] = -200
$txt = = read text: page=$PageID id=145
$temp.array[9] = $txt
$temp.array[10] = -1
$txt = = read text: page=$PageID id=140
$temp.array[11] = $txt
else
$temp.array = = array alloc: size=2
$temp.array[0] = 1
$txt = = read text: page=$PageID id=$main.type
$txt = = sprintf: pageid=$PageID textid=19, $txt, $sw, null, null, null
$temp.array[1] = $txt
end

$return.array = = array alloc: size=2
$return.array[0] = 'show.type.dc'
$return.array[1] = $sm

$format = = create new array, arguments=$temp.array, $return.array, null, null, null
append $format to array $menu
endsub
* end
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
* -----------------------------------------------------------------------------------
return null




