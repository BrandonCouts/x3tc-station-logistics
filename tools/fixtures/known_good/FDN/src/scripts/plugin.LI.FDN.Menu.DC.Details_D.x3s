#name: plugin.LI.FDN.Menu.DC.Details_D
#lang: 44
#origin_mod: FDN
#source: mods/FDN/scripts/plugin.LI.FDN.Menu.DC.Details_D.xml

* Author: Logain Abler
* -----------------------------------------------------------------------------------
* This script builds and updates the global refs that hold the updated values for
* plugin.LI.FDN.Menu.DC.Details

* Expected values:
* - N/A the DC is recovered from the AL Plugin global variable

* Returns values:
* - N/A created and updateds global variables for dymanic menu

* Version: 1.0
* Date: 22/05/2012
* Tested: 22/05/2012
* -----------------------------------------------------------------------------------

* Fetch values saved in the AL Plugin global variable:
* - Page ID
* - Designated DC
* - open.menu - this is used to check if the LI.FDN.Menu.DC.Details is open
* - is.dynamic - flags if the menu is dynamic
* open.menu - value is 1
$al.Settings = get global variable: name='al.LI.FDN.event'
if $al.Settings
$PageID = $al.Settings[1]
$dc = $al.Settings[2]
$open.menu = $al.Settings[5]
$is.dynamic = $al.Settings[6][0]
end
* -----------------------------------------------------------------------------------

* The ID code of the DC is used as a reference in naming the global variable
$id = $dc  ->  get ID code
* -----------------------------------------------------------------------------------
* Get a list of tradeable wares for the DC
$ware.array = $dc  ->  get tradeable ware array from station
* -----------------------------------------------------------------------------------

* Call the Sub which created the global variable used for the dynamic menu
gosub Write.Menu.Global.Sub:
* -----------------------------------------------------------------------------------

* Only call the while loop for update if there is a DC
if $dc

* If dynamic start While Loop
if $is.dynamic
* While loop which runs whilst the LI.FDN.Menu.DC.Details menu is open
* open.mene as stored in the AL Plugin global variable
while [TRUE]
* -----------------------------------------------------------------------------------

* wait
 = wait randomly from 1000 to 1500 ms
* -----------------------------------------------------------------------------------

* If the checks in this section fail exit the while loop
* Check FDN plugin status
skip if $al.Settings[0]
return null
* -----------------------------------------------------------------------------------

* Check if DC menu is open - Value should be 1 and is set in plugin.LI.FDN.Main.Menu
$open.menu = $al.Settings[5]
skip if $open.menu == 1
return null
* -----------------------------------------------------------------------------------

* Call the Sub which updates the global variable used for the dynamic menu
gosub Update.Menu.Global.Sub:
* -----------------------------------------------------------------------------------
end
end
end
return null
* -----------------------------------------------------------------------------------

* This is the Sub which created the global variable used for the dynamic menu up
* sorted.ware.array format [Ware Type][sorted Ware array for for the Ware Type]
Write.Menu.Global.Sub:

* credits
$pointer = = sprintf: pageid=$PageID textid=5001, $id, null, null, null, null
$txt = = read text: page=$PageID id=146
$temp.array = = array alloc: size=4
$temp.array[0] = 1
$temp.array[1] = $txt
$temp.array[2] = -1
$credits = $dc  ->  get money
$credits = = convert number $credits to string
$credits = = sprintf: pageid=$PageID textid=202, $credits, null, null, null, null
$temp.array[3] = $credits
set global variable: name=$pointer value=$temp.array
* -----------------------------------------------------------------------------------

$s = size of array $ware.array
while $s > 0
dec $s =
$ware = $ware.array[$s]
* -----------------------------------------------------------------------------------

* Calls script plugin.LI.FDN.Wares.Summary which returns a formated array
* For the ware
$ware.summary = [THIS] -> call script plugin.LI.FDN.Wares.Summary : station=$dc  ware=$ware
* -----------------------------------------------------------------------------------

* Create and update the global variable for the dynamic menu
* DC ID code and Ware are used to create unique global variable
$pointer = = sprintf: pageid=$PageID textid=5000, $id, $ware, null, null, null
set global variable: name=$pointer value=$ware.summary
* -----------------------------------------------------------------------------------
end
endsub
* -----------------------------------------------------------------------------------

* This is the Sub which update the global variable created by Write.Menu.Global.Sub
Update.Menu.Global.Sub:

* credits
$pointer = = sprintf: pageid=$PageID textid=5001, $id, null, null, null, null
$array = get global variable: name=$pointer
$credits = $dc  ->  get money
$credits = = convert number $credits to string
$credits = = sprintf: pageid=$PageID textid=202, $credits, null, null, null, null
$array[3] = $credits
* -----------------------------------------------------------------------------------

$s = size of array $ware.array
while $s > 0
dec $s =
$ware = $ware.array[$s]
* -----------------------------------------------------------------------------------

* Calls script plugin.LI.FDN.Wares.Summary which returns a formated array
* For the ware
$ware.summary = [THIS] -> call script plugin.LI.FDN.Wares.Summary : station=$dc  ware=$ware
* -----------------------------------------------------------------------------------

* FIRST - extract the values from the ware.summary array
$txt = $ware.summary[0][1]
$remote = $ware.summary[0][3]
$buy.at = $ware.summary[0][5]
$sell.cap = $ware.summary[0][7]
$sell.at = $ware.summary[0][9]
$storage = $ware.summary[0][11]
* -----------------------------------------------------------------------------------

* SECOND - Update the values in the global variable
$pointer = = sprintf: pageid=$PageID textid=5000, $id, $ware, null, null, null
$ware.detail.array = get global variable: name=$pointer
$ware.detail.array[0][1] = $txt
$ware.detail.array[0][3] = $remote
$ware.detail.array[0][5] = $buy.at
$ware.detail.array[0][7] = $sell.cap
$ware.detail.array[0][9] = $sell.at
$ware.detail.array[0][11] = $storage
* -----------------------------------------------------------------------------------
end
endsub
* -----------------------------------------------------------------------------------
return null



