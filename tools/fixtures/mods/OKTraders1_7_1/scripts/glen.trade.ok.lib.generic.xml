<?xml version="1.0" standalone="yes"?>
<?xml-stylesheet href="x2script.xsl" type="text/xsl"?>
<!-- Generated using X-Studio -->
<script>
	<name>glen.trade.ok.lib.generic</name>
	<version>1</version>
	<engineversion>50</engineversion>
	<description>Generic library functions</description>
	<arguments>
		<argument index="1" name="Func" type="Var/Number" desc="" />
		<argument index="2" name="Arg1" type="Value" desc="" />
		<argument index="3" name="Arg2" type="Value" desc="" />
		<argument index="4" name="Arg3" type="Value" desc="" />
		<argument index="5" name="Arg4" type="Value" desc="" />
		<argument index="6" name="Arg5" type="Value" desc="" />
	</arguments>
	<sourcetext>
		<line linenr="001" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="002" indent="">
			<comment>* OK Trade</comment>
		</line>
		<line linenr="003" indent="">
			<comment>*  Generic optimized functions</comment>
		</line>
		<line linenr="004" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="005" indent="" />
		<line linenr="006" indent="">
			<comment>* $Lib.Generic.Get.Minimum = 1</comment>
		</line>
		<line linenr="007" indent="">
			<comment>* $Lib.Generic.Join.Arrays = 2</comment>
		</line>
		<line linenr="008" indent="">
			<comment>* $Lib.Generic.Clone.Array = 3</comment>
		</line>
		<line linenr="009" indent="">
			<comment>* $Lib.Generic.Get.Jump.Energy.For.Trip = 4</comment>
		</line>
		<line linenr="010" indent="">
			<comment>* $Lib.Generic.Can.Jump.Trip = 5</comment>
		</line>
		<line linenr="011" indent="" />
		<line linenr="012" indent="">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>null</var>
		</line>
		<line linenr="013" indent="" />
		<line linenr="014" indent="">
			<text>if</text>
			<text> </text>
			<var>$Func</var>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>1</var>
		</line>
		<line linenr="015" indent="&#160;">
			<text>gosub</text>
			<text> </text>
			<var>Lib.Generic.Get.Minimum</var>
			<text>:</text>
		</line>
		<line linenr="016" indent="">
			<text>else</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$Func</var>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>2</var>
		</line>
		<line linenr="017" indent="&#160;">
			<text>gosub</text>
			<text> </text>
			<var>Lib.Generic.Join.Arrays</var>
			<text>:</text>
		</line>
		<line linenr="018" indent="">
			<text>else</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$Func</var>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>3</var>
		</line>
		<line linenr="019" indent="&#160;">
			<text>gosub</text>
			<text> </text>
			<var>Lib.Generic.Clone.Array</var>
			<text>:</text>
		</line>
		<line linenr="020" indent="">
			<text>else</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$Func</var>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>4</var>
		</line>
		<line linenr="021" indent="&#160;">
			<text>gosub</text>
			<text> </text>
			<var>Lib.Generic.Get.Jump.Energy.For.Trip</var>
			<text>:</text>
		</line>
		<line linenr="022" indent="">
			<text>else</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$Func</var>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>5</var>
		</line>
		<line linenr="023" indent="&#160;">
			<text>gosub</text>
			<text> </text>
			<var>Lib.Generic.Can.Jump.Trip</var>
			<text>:</text>
		</line>
		<line linenr="024" indent="">
			<text>end</text>
		</line>
		<line linenr="025" indent="" />
		<line linenr="026" indent="">
			<text>return</text>
			<text> </text>
			<var>$rc</var>
		</line>
		<line linenr="027" indent="" />
		<line linenr="028" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="029" indent="">
			<comment>* Lib.Generic.Get.Minimum:</comment>
		</line>
		<line linenr="030" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="031" indent="">
			<var>Lib.Generic.Get.Minimum</var>
			<text>:</text>
		</line>
		<line linenr="032" indent="&#160;">
			<var>$Game.Version</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>script</text>
			<text> </text>
			<text>engine</text>
			<text> </text>
			<text>version</text>
		</line>
		<line linenr="033" indent="&#160;">
			<text>if</text>
			<text> </text>
			<text>(</text>
			<var>$Game.Version</var>
			<text> </text>
			<text>&gt;</text>
			<text> </text>
			<var>49</var>
			<text>)</text>
		</line>
		<line linenr="034" indent="&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>get</text>
			<text> </text>
			<text>minimum</text>
			<text>,</text>
			<text> </text>
			<var>$Arg1</var>
			<text>,</text>
			<text> </text>
			<var>$Arg2</var>
			<text>,</text>
			<text> </text>
			<var>$Arg3</var>
			<text>,</text>
			<text> </text>
			<var>$Arg4</var>
			<text>,</text>
			<text> </text>
			<var>$Arg5</var>
		</line>
		<line linenr="035" indent="&#160;">
			<text>else</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg1</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="036" indent="&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg1</var>
		</line>
		<line linenr="037" indent="&#160;&#160;">
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg2</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="038" indent="&#160;&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>&lt;</text>
			<text> </text>
			<var>$Arg2</var>
		</line>
		<line linenr="039" indent="&#160;&#160;&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg2</var>
		</line>
		<line linenr="040" indent="&#160;&#160;&#160;">
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg3</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="041" indent="&#160;&#160;&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>&lt;</text>
			<text> </text>
			<var>$Arg3</var>
		</line>
		<line linenr="042" indent="&#160;&#160;&#160;&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg3</var>
		</line>
		<line linenr="043" indent="&#160;&#160;&#160;&#160;">
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg4</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="044" indent="&#160;&#160;&#160;&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>&lt;</text>
			<text> </text>
			<var>$Arg4</var>
		</line>
		<line linenr="045" indent="&#160;&#160;&#160;&#160;&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg4</var>
		</line>
		<line linenr="046" indent="&#160;&#160;&#160;&#160;&#160;">
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg5</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="047" indent="&#160;&#160;&#160;&#160;&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>&lt;</text>
			<text> </text>
			<var>$Arg5</var>
		</line>
		<line linenr="048" indent="&#160;&#160;&#160;&#160;&#160;&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg5</var>
		</line>
		<line linenr="049" indent="&#160;&#160;&#160;&#160;&#160;">
			<text>end</text>
		</line>
		<line linenr="050" indent="&#160;&#160;&#160;&#160;">
			<text>end</text>
		</line>
		<line linenr="051" indent="&#160;&#160;&#160;">
			<text>end</text>
		</line>
		<line linenr="052" indent="&#160;&#160;">
			<text>end</text>
		</line>
		<line linenr="053" indent="&#160;">
			<text>end</text>
		</line>
		<line linenr="054" indent="">
			<text>endsub</text>
		</line>
		<line linenr="055" indent="" />
		<line linenr="056" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="057" indent="">
			<comment>* Lib.Generic.Join.Arrays:</comment>
		</line>
		<line linenr="058" indent="">
			<comment>*  Return a new array containing elements of Arg1 + Arg2</comment>
		</line>
		<line linenr="059" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="060" indent="">
			<var>Lib.Generic.Join.Arrays</var>
			<text>:</text>
		</line>
		<line linenr="061" indent="&#160;">
			<var>$Arg1.Length</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>size</text>
			<text> </text>
			<text>of</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg1</var>
		</line>
		<line linenr="062" indent="&#160;">
			<var>$Arg2.Length</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>size</text>
			<text> </text>
			<text>of</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg2</var>
		</line>
		<line linenr="063" indent="&#160;">
			<var>$Joined.Length</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Arg1.Length</var>
			<text> </text>
			<text>+</text>
			<text> </text>
			<var>$Arg2.Length</var>
		</line>
		<line linenr="064" indent="&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<text>alloc</text>
			<text>:</text>
			<text> </text>
			<text>size</text>
			<text>=</text>
			<var>$Joined.Length</var>
		</line>
		<line linenr="065" indent="&#160;" />
		<line linenr="066" indent="&#160;">
			<text>if</text>
			<text> </text>
			<var>$Arg2.Length</var>
		</line>
		<line linenr="067" indent="&#160;&#160;">
			<text>dec</text>
			<text> </text>
			<var>$Arg2.Length</var>
		</line>
		<line linenr="068" indent="&#160;&#160;">
			<text>copy</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg2</var>
			<text> </text>
			<text>index</text>
			<text> </text>
			<var>0</var>
			<text> </text>
			<text>...</text>
			<text> </text>
			<var>$Arg2.Length</var>
			<text> </text>
			<text>into</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>at</text>
			<text> </text>
			<text>index</text>
			<text> </text>
			<var>$Arg1.Length</var>
		</line>
		<line linenr="069" indent="&#160;">
			<text>end</text>
		</line>
		<line linenr="070" indent="&#160;" />
		<line linenr="071" indent="&#160;">
			<text>if</text>
			<text> </text>
			<var>$Arg1.Length</var>
		</line>
		<line linenr="072" indent="&#160;&#160;">
			<text>dec</text>
			<text> </text>
			<var>$Arg1.Length</var>
		</line>
		<line linenr="073" indent="&#160;&#160;">
			<text>copy</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg1</var>
			<text> </text>
			<text>index</text>
			<text> </text>
			<var>0</var>
			<text> </text>
			<text>...</text>
			<text> </text>
			<var>$Arg1.Length</var>
			<text> </text>
			<text>into</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>at</text>
			<text> </text>
			<text>index</text>
			<text> </text>
			<var>0</var>
		</line>
		<line linenr="074" indent="&#160;">
			<text>end</text>
		</line>
		<line linenr="075" indent="">
			<text>endsub</text>
		</line>
		<line linenr="076" indent="" />
		<line linenr="077" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="078" indent="">
			<comment>* Lib.Generic.Clone.Array:</comment>
		</line>
		<line linenr="079" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="080" indent="">
			<var>Lib.Generic.Clone.Array</var>
			<text>:</text>
		</line>
		<line linenr="081" indent="&#160;">
			<var>$size</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>size</text>
			<text> </text>
			<text>of</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg1</var>
		</line>
		<line linenr="082" indent="&#160;">
			<text>if</text>
			<text> </text>
			<var>$size</var>
		</line>
		<line linenr="083" indent="&#160;&#160;">
			<text>dec</text>
			<text> </text>
			<var>$size</var>
		</line>
		<line linenr="084" indent="&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>clone</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<var>$Arg1</var>
			<text> </text>
			<text>:</text>
			<text> </text>
			<text>index</text>
			<text> </text>
			<var>0</var>
			<text> </text>
			<text>...</text>
			<text> </text>
			<var>$size</var>
		</line>
		<line linenr="085" indent="&#160;">
			<text>else</text>
		</line>
		<line linenr="086" indent="&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>array</text>
			<text> </text>
			<text>alloc</text>
			<text>:</text>
			<text> </text>
			<text>size</text>
			<text>=</text>
			<var>0</var>
		</line>
		<line linenr="087" indent="&#160;">
			<text>end</text>
		</line>
		<line linenr="088" indent="">
			<text>endsub</text>
		</line>
		<line linenr="089" indent="" />
		<line linenr="090" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="091" indent="">
			<comment>* Lib.Generic.Get.Jump.Energy.For.Trip:</comment>
		</line>
		<line linenr="092" indent="">
			<comment>*  Get energy required to jump the specified amount of sectors. Because</comment>
		</line>
		<line linenr="093" indent="">
			<comment>*  separate uses of the jumpdrive incur an additional unit cost, the number</comment>
		</line>
		<line linenr="094" indent="">
			<comment>*  of individual jumps should be specified in the segments parameter.</comment>
		</line>
		<line linenr="095" indent="">
			<comment>*   Range = Arg1</comment>
		</line>
		<line linenr="096" indent="">
			<comment>*   Segments = Arg2</comment>
		</line>
		<line linenr="097" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="098" indent="">
			<var>Lib.Generic.Get.Jump.Energy.For.Trip</var>
			<text>:</text>
		</line>
		<line linenr="099" indent="&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg2</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="100" indent="&#160;&#160;">
			<var>$Arg2</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>1</var>
		</line>
		<line linenr="101" indent="&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>[THIS]</var>
			<text>-&gt;</text>
			<text> </text>
			<text>needed</text>
			<text> </text>
			<text>jump</text>
			<text> </text>
			<text>drive</text>
			<text> </text>
			<text>energy</text>
			<text> </text>
			<text>for</text>
			<text> </text>
			<text>jump</text>
			<text> </text>
			<text>to</text>
			<text> </text>
			<text>sector</text>
			<text> </text>
			<var>[SECTOR]</var>
		</line>
		<line linenr="102" indent="&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$rc</var>
			<text> </text>
			<text>*</text>
			<text> </text>
			<text>(</text>
			<var>$Arg1</var>
			<text> </text>
			<text>+</text>
			<text> </text>
			<var>$Arg2</var>
			<text>)</text>
		</line>
		<line linenr="103" indent="">
			<text>endsub</text>
		</line>
		<line linenr="104" indent="" />
		<line linenr="105" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="106" indent="">
			<comment>* Lib.Generic.Can.Jump.Trip:</comment>
		</line>
		<line linenr="107" indent="">
			<comment>*  Whether the ship is capable of jumping a trip specified by amount of sectors</comment>
		</line>
		<line linenr="108" indent="">
			<comment>*  and segments, where each segment means a separate jumpdrive usage that incurs</comment>
		</line>
		<line linenr="109" indent="">
			<comment>*  one additional unit cost of energy.</comment>
		</line>
		<line linenr="110" indent="">
			<comment>*   Range = Arg1</comment>
		</line>
		<line linenr="111" indent="">
			<comment>*   Segments = Arg2</comment>
		</line>
		<line linenr="112" indent="">
			<comment>*   Optional topup energy = Arg3</comment>
		</line>
		<line linenr="113" indent="">
			<comment>* ******************************************************************************</comment>
		</line>
		<line linenr="114" indent="">
			<var>Lib.Generic.Can.Jump.Trip</var>
			<text>:</text>
		</line>
		<line linenr="115" indent="&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>[THIS]</var>
			<text>-&gt;</text>
			<text> </text>
			<text>get</text>
			<text> </text>
			<text>amount</text>
			<text> </text>
			<text>of</text>
			<text> </text>
			<text>ware</text>
			<text> </text>
			<var>{Jumpdrive}</var>
			<text> </text>
			<text>in</text>
			<text> </text>
			<text>cargo</text>
			<text> </text>
			<text>bay</text>
		</line>
		<line linenr="116" indent="&#160;">
			<text>if</text>
			<text> </text>
			<var>$rc</var>
		</line>
		<line linenr="117" indent="&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg2</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="118" indent="&#160;&#160;&#160;">
			<var>$Arg2</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>1</var>
		</line>
		<line linenr="119" indent="&#160;&#160;">
			<text>skip</text>
			<text> </text>
			<text>if</text>
			<text> </text>
			<text>not</text>
			<text> </text>
			<text>is</text>
			<text> </text>
			<text>datatype</text>
			<text>[</text>
			<var>$Arg3</var>
			<text>]</text>
			<text> </text>
			<text>==</text>
			<text> </text>
			<var>[DATATYPE_NULL]</var>
		</line>
		<line linenr="120" indent="&#160;&#160;&#160;">
			<var>$Arg3</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>0</var>
		</line>
		<line linenr="121" indent="&#160;&#160;">
			<var>$Energy.Required</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>[THIS]</var>
			<text>-&gt;</text>
			<text> </text>
			<text>needed</text>
			<text> </text>
			<text>jump</text>
			<text> </text>
			<text>drive</text>
			<text> </text>
			<text>energy</text>
			<text> </text>
			<text>for</text>
			<text> </text>
			<text>jump</text>
			<text> </text>
			<text>to</text>
			<text> </text>
			<text>sector</text>
			<text> </text>
			<var>[SECTOR]</var>
		</line>
		<line linenr="122" indent="&#160;&#160;">
			<var>$Energy.Required</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Energy.Required</var>
			<text> </text>
			<text>*</text>
			<text> </text>
			<text>(</text>
			<var>$Arg1</var>
			<text> </text>
			<text>+</text>
			<text> </text>
			<var>$Arg2</var>
			<text>)</text>
		</line>
		<line linenr="123" indent="&#160;&#160;">
			<var>$Energy.Have</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>[THIS]</var>
			<text>-&gt;</text>
			<text> </text>
			<text>get</text>
			<text> </text>
			<text>amount</text>
			<text> </text>
			<text>of</text>
			<text> </text>
			<text>ware</text>
			<text> </text>
			<var>{Energy Cells}</var>
			<text> </text>
			<text>in</text>
			<text> </text>
			<text>cargo</text>
			<text> </text>
			<text>bay</text>
		</line>
		<line linenr="124" indent="&#160;&#160;">
			<var>$Energy.Have</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<var>$Energy.Have</var>
			<text> </text>
			<text>+</text>
			<text> </text>
			<var>$Arg3</var>
		</line>
		<line linenr="125" indent="&#160;&#160;">
			<var>$rc</var>
			<text> </text>
			<text>=</text>
			<text> </text>
			<text>(</text>
			<var>$Energy.Have</var>
			<text> </text>
			<text>&gt;=</text>
			<text> </text>
			<var>$Energy.Required</var>
			<text>)</text>
		</line>
		<line linenr="126" indent="&#160;">
			<text>end</text>
		</line>
		<line linenr="127" indent="">
			<text>endsub</text>
		</line>
	</sourcetext>
	<codearray>
		<sval type="array" size="10">
			<sval type="string" val="glen.trade.ok.lib.generic" />
			<sval type="int" val="50" />
			<sval type="string" val="Generic library functions" />
			<sval type="int" val="1" />
			<sval type="int" val="0" />
			<sval type="array" size="14">
				<sval type="string" val="Func" />
				<sval type="string" val="Arg1" />
				<sval type="string" val="Arg2" />
				<sval type="string" val="Arg3" />
				<sval type="string" val="Arg4" />
				<sval type="string" val="Arg5" />
				<sval type="string" val="rc" />
				<sval type="string" val="Game.Version" />
				<sval type="string" val="Arg1.Length" />
				<sval type="string" val="Arg2.Length" />
				<sval type="string" val="Joined.Length" />
				<sval type="string" val="size" />
				<sval type="string" val="Energy.Required" />
				<sval type="string" val="Energy.Have" />
			</sval>
			<sval type="array" size="75">
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="0" />
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-1610611709" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="0" />
					<sval type="int" val="4" />
					<sval type="int" val="1" />
					<sval type="int" val="15" />
					<sval type="int" val="0" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="0" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1167" />
					<sval type="int" val="16" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="15" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-1610610939" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="0" />
					<sval type="int" val="4" />
					<sval type="int" val="2" />
					<sval type="int" val="15" />
					<sval type="int" val="0" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="0" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1167" />
					<sval type="int" val="36" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="15" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-1610610171" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="0" />
					<sval type="int" val="4" />
					<sval type="int" val="3" />
					<sval type="int" val="15" />
					<sval type="int" val="0" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="0" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1167" />
					<sval type="int" val="48" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="15" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-1610609403" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="0" />
					<sval type="int" val="4" />
					<sval type="int" val="4" />
					<sval type="int" val="15" />
					<sval type="int" val="0" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="0" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1167" />
					<sval type="int" val="56" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="15" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-1610608891" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="0" />
					<sval type="int" val="4" />
					<sval type="int" val="5" />
					<sval type="int" val="15" />
					<sval type="int" val="0" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="0" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1167" />
					<sval type="int" val="62" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="103" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="101" />
					<sval type="string" val="Lib.Generic.Get.Minimum" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="152" />
					<sval type="int" val="7" />
				</sval>
				<sval type="array" size="15">
					<sval type="int" val="104" />
					<sval type="int" val="-1610607357" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="7" />
					<sval type="int" val="4" />
					<sval type="int" val="49" />
					<sval type="int" val="15" />
					<sval type="int" val="2" />
					<sval type="int" val="5" />
					<sval type="int" val="16" />
					<sval type="int" val="-1" />
					<sval type="int" val="2" />
					<sval type="int" val="-2" />
					<sval type="int" val="17" />
				</sval>
				<sval type="array" size="12">
					<sval type="int" val="1597" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="4" />
					<sval type="int" val="131074" />
					<sval type="int" val="5" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="35" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-536861946" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-536861948" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-536864249" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="15" />
					<sval type="int" val="3" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="3" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-536861948" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-536863481" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="15" />
					<sval type="int" val="3" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="3" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-536861948" />
					<sval type="int" val="131074" />
					<sval type="int" val="4" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-536862713" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="4" />
					<sval type="int" val="15" />
					<sval type="int" val="3" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="3" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="4" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-536861948" />
					<sval type="int" val="131074" />
					<sval type="int" val="5" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="-536861945" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="5" />
					<sval type="int" val="15" />
					<sval type="int" val="3" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="3" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="5" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="1">
					<sval type="int" val="1168" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="101" />
					<sval type="string" val="Lib.Generic.Join.Arrays" />
				</sval>
				<sval type="array" size="4">
					<sval type="int" val="131" />
					<sval type="int" val="8" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
				</sval>
				<sval type="array" size="4">
					<sval type="int" val="131" />
					<sval type="int" val="9" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="10" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="8" />
					<sval type="int" val="131074" />
					<sval type="int" val="9" />
					<sval type="int" val="15" />
					<sval type="int" val="11" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="11" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="4">
					<sval type="int" val="128" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="10" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="-1610601469" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="9" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="143" />
					<sval type="int" val="9" />
				</sval>
				<sval type="array" size="11">
					<sval type="int" val="133" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="8" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
					<sval type="int" val="131074" />
					<sval type="int" val="9" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="-1610600701" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="8" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="143" />
					<sval type="int" val="8" />
				</sval>
				<sval type="array" size="11">
					<sval type="int" val="133" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
					<sval type="int" val="131074" />
					<sval type="int" val="8" />
				</sval>
				<sval type="array" size="1">
					<sval type="int" val="1168" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="101" />
					<sval type="string" val="Lib.Generic.Clone.Array" />
				</sval>
				<sval type="array" size="4">
					<sval type="int" val="131" />
					<sval type="int" val="11" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="-1610598909" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="11" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="143" />
					<sval type="int" val="11" />
				</sval>
				<sval type="array" size="8">
					<sval type="int" val="132" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
					<sval type="int" val="131074" />
					<sval type="int" val="11" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="112" />
					<sval type="int" val="55" />
				</sval>
				<sval type="array" size="4">
					<sval type="int" val="128" />
					<sval type="int" val="6" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="1">
					<sval type="int" val="1168" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="101" />
					<sval type="string" val="Lib.Generic.Get.Jump.Energy.For.Trip" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-1610597624" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="2" />
					<sval type="int" val="1" />
					<sval type="int" val="4" />
					<sval type="int" val="1" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="567" />
					<sval type="int" val="131075" />
					<sval type="int" val="1" />
					<sval type="int" val="6" />
					<sval type="int" val="131075" />
					<sval type="int" val="6" />
				</sval>
				<sval type="array" size="21">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="5" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="15" />
					<sval type="int" val="11" />
					<sval type="int" val="15" />
					<sval type="int" val="13" />
					<sval type="int" val="7" />
					<sval type="int" val="-1" />
					<sval type="int" val="13" />
					<sval type="int" val="16" />
					<sval type="int" val="-2" />
					<sval type="int" val="11" />
					<sval type="int" val="-3" />
					<sval type="int" val="17" />
				</sval>
				<sval type="array" size="1">
					<sval type="int" val="1168" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="101" />
					<sval type="string" val="Lib.Generic.Can.Jump.Trip" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="618" />
					<sval type="int" val="131075" />
					<sval type="int" val="1" />
					<sval type="int" val="6" />
					<sval type="int" val="9" />
					<sval type="int" val="1048611" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="-1610593789" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="6" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-1610595576" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="2" />
					<sval type="int" val="1" />
					<sval type="int" val="4" />
					<sval type="int" val="1" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="125" />
					<sval type="int" val="-1610595064" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="20" />
					<sval type="int" val="0" />
				</sval>
				<sval type="array" size="7">
					<sval type="int" val="104" />
					<sval type="int" val="3" />
					<sval type="int" val="1" />
					<sval type="int" val="4" />
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="int" val="-1" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="567" />
					<sval type="int" val="131075" />
					<sval type="int" val="1" />
					<sval type="int" val="12" />
					<sval type="int" val="131075" />
					<sval type="int" val="6" />
				</sval>
				<sval type="array" size="21">
					<sval type="int" val="104" />
					<sval type="int" val="12" />
					<sval type="int" val="5" />
					<sval type="int" val="131074" />
					<sval type="int" val="12" />
					<sval type="int" val="131074" />
					<sval type="int" val="1" />
					<sval type="int" val="131074" />
					<sval type="int" val="2" />
					<sval type="int" val="15" />
					<sval type="int" val="11" />
					<sval type="int" val="15" />
					<sval type="int" val="13" />
					<sval type="int" val="7" />
					<sval type="int" val="-1" />
					<sval type="int" val="13" />
					<sval type="int" val="16" />
					<sval type="int" val="-2" />
					<sval type="int" val="11" />
					<sval type="int" val="-3" />
					<sval type="int" val="17" />
				</sval>
				<sval type="array" size="6">
					<sval type="int" val="618" />
					<sval type="int" val="131075" />
					<sval type="int" val="1" />
					<sval type="int" val="13" />
					<sval type="int" val="9" />
					<sval type="int" val="720896" />
				</sval>
				<sval type="array" size="13">
					<sval type="int" val="104" />
					<sval type="int" val="13" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="13" />
					<sval type="int" val="131074" />
					<sval type="int" val="3" />
					<sval type="int" val="15" />
					<sval type="int" val="11" />
					<sval type="int" val="3" />
					<sval type="int" val="-1" />
					<sval type="int" val="11" />
					<sval type="int" val="-2" />
				</sval>
				<sval type="array" size="15">
					<sval type="int" val="104" />
					<sval type="int" val="6" />
					<sval type="int" val="3" />
					<sval type="int" val="131074" />
					<sval type="int" val="13" />
					<sval type="int" val="131074" />
					<sval type="int" val="12" />
					<sval type="int" val="15" />
					<sval type="int" val="4" />
					<sval type="int" val="5" />
					<sval type="int" val="16" />
					<sval type="int" val="-1" />
					<sval type="int" val="4" />
					<sval type="int" val="-2" />
					<sval type="int" val="17" />
				</sval>
				<sval type="array" size="1">
					<sval type="int" val="1168" />
				</sval>
			</sval>
			<sval type="array" size="6">
				<sval type="array" size="2">
					<sval type="int" val="10" />
					<sval type="string" val="" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="9" />
					<sval type="string" val="" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="9" />
					<sval type="string" val="" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="9" />
					<sval type="string" val="" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="9" />
					<sval type="string" val="" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="9" />
					<sval type="string" val="" />
				</sval>
			</sval>
			<sval type="array" size="58">
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="OK Trade" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val=" Generic optimized functions" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="0" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="$Lib.Generic.Get.Minimum = 1" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="$Lib.Generic.Join.Arrays = 2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="$Lib.Generic.Clone.Array = 3" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="$Lib.Generic.Get.Jump.Energy.For.Trip = 4" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="0" />
					<sval type="int" val="1" />
					<sval type="string" val="$Lib.Generic.Can.Jump.Trip = 5" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="0" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="1" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="15" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="15" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="16" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="16" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="16" />
					<sval type="int" val="1" />
					<sval type="string" val="Lib.Generic.Get.Minimum:" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="16" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="35" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="35" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="35" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="35" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="35" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="36" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="36" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="36" />
					<sval type="int" val="1" />
					<sval type="string" val="Lib.Generic.Join.Arrays:" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="36" />
					<sval type="int" val="1" />
					<sval type="string" val=" Return a new array containing elements of Arg1 + Arg2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="36" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="41" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="44" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="44" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="47" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="48" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="48" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="48" />
					<sval type="int" val="1" />
					<sval type="string" val="Lib.Generic.Clone.Array:" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="48" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="54" />
					<sval type="int" val="5" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="55" />
					<sval type="int" val="4" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="56" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val="Lib.Generic.Get.Jump.Energy.For.Trip:" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val=" Get energy required to jump the specified amount of sectors. Because" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val=" separate uses of the jumpdrive incur an additional unit cost, the number" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val=" of individual jumps should be specified in the segments parameter." />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val="  Range = Arg1" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val="  Segments = Arg2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="56" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="62" />
					<sval type="int" val="2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="Lib.Generic.Can.Jump.Trip:" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val=" Whether the ship is capable of jumping a trip specified by amount of sectors" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val=" and segments, where each segment means a separate jumpdrive usage that incurs" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val=" one additional unit cost of energy." />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="  Range = Arg1" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="  Segments = Arg2" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="  Optional topup energy = Arg3" />
				</sval>
				<sval type="array" size="3">
					<sval type="int" val="62" />
					<sval type="int" val="1" />
					<sval type="string" val="******************************************************************************" />
				</sval>
				<sval type="array" size="2">
					<sval type="int" val="74" />
					<sval type="int" val="4" />
				</sval>
			</sval>
			<sval type="int" val="0" />
		</sval>
	</codearray>
</script>
