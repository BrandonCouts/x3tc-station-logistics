{
  "patterns": [
    {
      "name": "load.text",
      "regex": "^load text:\\s*id=(\\d+|\\$[A-Za-z0-9_.]+)$",
      "examples": ["load text: id=9055"]
    },
    {
      "name": "al.register",
      "regex": "^al engine:\\s*register script='[^']+'$",
      "examples": ["al engine: register script='al.plugin.slx'"]
    },
    {
      "name": "al.description",
      "regex": "^al engine:\\s*set plugin '[^']+' description to '.*'$",
      "examples": ["al engine: set plugin 'al.plugin.slx' description to 'SLX Station Logistics'"]
    },
    {
      "name": "al.timer",
      "regex": "^al engine:\\s*set plugin '[^']+' timer interval to \\d+\\s*s$",
      "examples": ["al engine: set plugin 'al.plugin.slx' timer interval to 30 s"]
    },
    {
      "name": "stop.task",
      "regex": "^\\[THIS]->stop task \\d+$",
      "examples": ["[THIS]->stop task 0"]
    },
    {
      "name": "start.task",
      "regex": "^start task \\d+\\s+with script='[^']+'\\s+on=\\[THIS\\]$",
      "examples": ["start task 123 with script='plugin.example' on=[THIS]"]
    },
    {
      "name": "call.script",
      "regex": "^=?\\s*\\[THIS]->\\s*call script '[^']+'( : .*)?$",
      "examples": ["= [THIS]-> call script 'plugin.config.addscript' : argument1=$txt"]
    },
    {
      "name": "wait",
      "regex": "^=?\\s*wait \\d+\\s*ms$",
      "examples": ["wait 1000 ms"]
    },
    {
      "name": "set.global",
      "regex": "^set global variable:\\s*name='[^']+'\\s*value=.*$",
      "examples": ["set global variable: name='g.slx.foo' value=$bar"]
    },
    {
      "name": "return",
      "regex": "^return (null|value .+)$",
      "examples": ["return null"]
    },
    {
      "name": "write.log",
      "regex": "^write to log file \\$[A-Za-z0-9_.]+ append=\\[(TRUE|FALSE)\\] value=(\\$[A-Za-z0-9_.]+|'[^']+')$",
      "examples": ["write to log file $DebugID append=[FALSE] value=$txt"]
    },
    {
      "name": "dec",
      "regex": "^dec \\$[A-Za-z0-9_.]+$",
      "examples": ["dec $s"]
    },
    {
      "name": "remove.array.elem",
      "regex": "^remove element from array \\$[A-Za-z0-9_.]+ at index \\$[A-Za-z0-9_.]+$",
      "examples": ["remove element from array $config.Array at index $s"]
    },
    {
      "name": "skip.if",
      "regex": "^skip if \\$[A-Za-z0-9_.]+$",
      "examples": ["skip if $section"]
    },
    {
      "name": "al.description.var",
      "regex": "^al engine:\\s*set plugin \\$[A-Za-z0-9_.]+ description to \\$[A-Za-z0-9_.]+$",
      "examples": ["al engine: set plugin $al.PluginID description to $plugin.description"]
    },
    {
      "name": "al.timer.var",
      "regex": "^al engine:\\s*set plugin \\$[A-Za-z0-9_.]+ timer interval to \\d+\\s*s$",
      "examples": ["al engine: set plugin $al.PluginID timer interval to 25 s"]
    },
    {
      "name": "set.global.var",
      "regex": "^set global variable:\\s*name=\\$[A-Za-z0-9_.]+\\s*value=\\$[A-Za-z0-9_.]+$",
      "examples": ["set global variable: name=$al.PluginID value=$al.Settings"]
    },
    {
      "name": "return.var",
      "regex": "^return \\$[A-Za-z0-9_.]+$",
      "examples": ["return $al.Ret"]
    }
    ,
    {
      "name": "append.array",
      "regex": "^append \\$[A-Za-z0-9_.]+ to array \\$[A-Za-z0-9_.]+$",
      "examples": ["append $station to array $exclude.array"]
    },
    {
      "name": "gosub",
      "regex": "^gosub [A-Za-z0-9_.]+:$",
      "examples": ["gosub Debug.Sub:"]
    },
    {
      "name": "label",
      "regex": "^[A-Za-z0-9_.]+:$",
      "examples": ["Debug.Sub:"]
    },
    {
      "name": "endsub",
      "regex": "^endsub$",
      "examples": ["endsub"]
    },
    {
      "name": "obj.add.units",
      "regex": "^=?\\s*\\$[A-Za-z0-9_.]+->\\s*add (\\$[A-Za-z0-9_.]+|[-]?\\d+) units of \\$[A-Za-z0-9_.]+$",
      "examples": ["= $station-> add $amount units of $ware"]
    },
    {
      "name": "wait.random",
      "regex": "^=?\\s*wait randomly from \\d+ to \\d+ ms$",
      "examples": ["= wait randomly from 500 to 1000 ms"]
    }
  ]
}
